/*
2870. 배열을 비우기 위한 최소 작업 횟수

양의 정수로 구성된 인덱스가 0인 배열의 개수가 주어집니다.

배열에 여러 번 적용할 수 있는 두 가지 유형의 연산이 있습니다:

값이 같은 두 요소를 선택하여 배열에서 삭제합니다.
같은 값의 요소 세 개를 선택하여 배열에서 삭제합니다.
배열을 비우는 데 필요한 최소 연산 횟수를 반환하거나, 불가능한 경우 -1을 반환합니다.

 
예제 1:
입력: nums = [2,3,3,2,2,4,2,3,4]
Output: 4
설명: 다음 연산을 적용하여 배열을 비워둘 수 있습니다:
- 인덱스 0과 3의 요소에 첫 번째 연산을 적용합니다. 결과 배열은 nums = [3,3,2,4,2,3,4]입니다.
- 인덱스 2와 4의 요소에 첫 번째 연산을 적용합니다. 결과 배열은 nums = [3,3,4,3,4]입니다.
- 인덱스 0, 1, 3의 요소에 두 번째 연산을 적용합니다. 결과 배열은 nums = [4,4]입니다.
- 인덱스 0과 1의 요소에 첫 번째 연산을 적용합니다. 결과 배열은 nums = []입니다.
4개 미만의 연산으로 배열을 비울 수 없음을 알 수 있습니다.

예제 2:
입력: nums = [2,1,2,2,2,3,3]
Output: -1
설명: 배열을 비우는 것은 불가능합니다.
 

제약 조건이 있습니다:
2 <= nums.length <= 10^5
1 <= nums[i] <= 10^6
*/

class Solution {
    public int minOperations(int[] nums) {
        Map<Integer, Integer> map = new HashMap<>();

        for (int n : nums)
            map.put(n, map.getOrDefault(n, 0) +1);
        
        int cnt = 0;

        for (int n : map.keySet()){
            if (map.get(n) == 1) return -1;
            cnt += map.get(n)/ 3 + (map.get(n) % 3 > 0 ? 1 : 0);
        }

        return cnt;
    }
}