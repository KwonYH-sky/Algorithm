/*
198. 좀도둑

당신은 거리의 주택을 털 계획을 세우는 전문 강도입니다. 
각 집에는 일정 금액의 돈이 숨겨져 있으며, 
유일한 제약 조건은 각 집을 털지 못하도록 막는 유일한 제약은 
인접한 집에 보안 시스템이 연결되어 있다는 것입니다. 
보안 시스템이 연결되어 있고 
같은 날 밤에 인접한 두 집에 침입이 발생하면 자동으로 경찰에 연락한다는 것입니다.

각 집의 금액을 나타내는 정수 배열의 숫자가 주어졌을 때, 
경찰에 알리지 않고 오늘 밤에 털 수 있는 최대 금액을 반환합니다.

 
예제 1:
입력: nums = [1,2,3,1]
Output: 4
설명: 집 1 집 1을 털고 (돈 = 1), 집 3을 털고 (돈 = 3).
강탈할 수 있는 총 금액 = 1 + 3 = 4입니다.

예제 2:
입력: nums = [2,7,9,3,1]
Output: 12
설명: 집 1을 털고(돈 = 2), 집 3을 털고(돈 = 9), 집 5를 털고(돈 = 1).
강탈할 수 있는 총 금액 = 2 + 9 + 1 = 12입니다.

 
제약 조건:
1 <= nums.length <= 100
0 <= nums[i] <= 400
*/


class Solution {
    public int rob(int[] nums) {
        int len = nums.length;
        if (len == 0) return 0;
        int[] dp = new int[len + 1];

        dp[1] = nums[0];

        for (int i = 1; i < len; i++) {
            dp[i+1] = Math.max(dp[i], dp[i-1] + nums[i]);
        }
        
        return dp[len];
    }
}