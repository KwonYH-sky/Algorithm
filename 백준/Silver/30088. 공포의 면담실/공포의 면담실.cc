/*
공포의 면담실
 
시간 제한	메모리 제한
1 초 (추가 시간 없음)	1024 MB

문제
한국정보기술진흥원의 직원들은 6개월에 한 번 씩 전 직원이 사장님과 일대일 면담을 진행한다.

진흥원에는 N개의 부서가 있는데, 
부서에 소속된 모든 직원이 모두 면담을 마쳐야 해당 부서가 퇴근할 수 있다고 한다. 
면담은 한 번에 한 명씩만 진행된다.

모든 부서의 퇴근 시간의 합이 최소가 되는 값을 구하시오.

입력
첫 번째 줄에 부서의 수 N ($1 \le N \le 1000$)이 주어진다.

두 번째 줄부터 N개의 줄에 걸쳐서 부서별 직원의 수와 직원당 면담에 소요되는 시간이 공백으로 구분되어 주어진다. 
단, 모든 부서의 직원 수의 합은 1,000,000명 이하이며, 
직원당 면담에 소요 되는 시간은 1분 이상 1,000분 이하의 정수이다.

출력
모든 부서의 퇴근하는 데 걸리는 시간의 합의 최솟값을 분 단위로 출력한다.

예제 입력 1 
3
2 5 50
2 20 10
1 100
예제 출력 1 
300
부서 1에는 2명의 직원이 있고 각 직원의 면담 소요 시간은 5분, 50분이다.
부서 2에는 2명의 직원이 있고 각 직원의 면담 소요 시간은 
$20$분, 
$10$분이다.

부서 
$3$에는 
$1$명의 직원이 있고 각 직원의 면담 소요 시간은 
$100$분이다.

이때 면담 순서를 부서
$2$직원
$2$ → 부서
$2$직원
$1$ → 부서
$1$직원
$1$ → 부서
$1$직원
$2$ → 부서
$3$직원
$1$ 순서로 하면 부서
$2$의 퇴근 시간은 
$10+20=30$분, 부서
$1$의 퇴근 시간은 
$10+20+5+50=85$분, 부서
$3$의 퇴근 시간은 
$10+20+5+50+100=185$분으로 총합은 
$30+85+185=300$분이다.
*/

#include <bits/stdc++.h>

using namespace std;

int main() {
    long long n;
    cin >> n;
    vector<long long> v(n);
    for (int i = 0; i < n; i++) {
        long long m;
        cin >> m;
        long long sum = 0;
        for (int j = 0; j < m; j++) {
            long long a;
            cin >> a;
            sum += a;
        }
        v[i] = sum;
    }
    sort(v.begin(), v.end());

    long long sum = 0;
    long long ans = 0;
    for (int i = 0; i < n; i++) {
        sum += v[i];
        ans += sum;
    }
    cout << ans;

    return 0;
}