/*
현장 학습
 
시간 제한 메모리 제한
3초 (추가 시간 없음) 1024MB

문제
당신과 동급생들은 도심 박물관으로 흥미로운 현장 학습을 떠납니다. 
박물관까지는 한 시간 거리이기 때문에, 동일한 정원의 세 대의 버스와 한 대의 밴이 교통수단으로 배정됩니다. 
버스는 먼저 학생들만 탑승시키기 시작하고, 모든 학생이 탑승한 후에 선생님들이 남은 좌석을 채우기 시작합니다. 
남은 선생님들은 밴을 타게 됩니다. 
버스 여행을 더 흥미롭게 만들기 위해, 모든 학생들은 "선생님 없는 버스 여행"을 희망합니다! 
"선생님 없는 버스 여행"은 어떤 선생님도 버스에 타지 않는 상황을 말합니다.
학생들은 n개의 서로 다른 크기의 반 단위로 그룹화됩니다. 
각 반은 1부터 n까지의 번호를 할당받습니다. 한 반의 모든 학생은 같은 버스를 타야 합니다. 
버스는 번호 순서대로 반을 탑승시킵니다. 

즉:
첫 번째 버스는 1부터 i까지의 반을 탑승시킵니다.
두 번째 버스는 i+1부터 j까지의 반을 탑승시킵니다.
세 번째 버스는 j+1부터 n까지의 반을 탑승시킵니다.

모든 버스에는 최소 한 개의 반이 배정되어야 합니다.
각 반의 크기가 주어졌을 때, 3대의 동일한 버스에 학생들을 탑승시켜 
"선생님 없는 버스 여행"을 할 수 있는지 확인하세요.

입력
입력의 첫 줄에는 반의 수 N이 주어집니다 (3 ≤ N ≤ 1,000,000). 
두 번째 줄에는 N개의 정수가 주어지며, i번째 정수는 i번 반의 크기를 나타냅니다. 
반의 크기 범위는 [1, 10,000]입니다.

출력
학생들을 세 대의 버스에 위의 방식대로 탑승시켜 선생님 없는 버스 여행이 가능하다면, 
두 개의 정수 i와 j (1 ≤ i < j < n)를 출력합니다. 

여기서:
i는 첫 번째 버스에 마지막으로 탑승하는 반의 번호
j는 두 번째 버스에 마지막으로 탑승하는 반의 번호

세 번째 버스는 j+1부터 n까지의 반을 탑승시킬 것으로 가정합니다.
불가능한 경우 "-1"을 출력하세요.

예제 입력 1 
3
3 3 3
예제 출력 1 
1 2
예제 입력 2 
3
9 10 11
예제 출력 2 
-1
예제 입력 3 
9
1 2 3 1 2 3 1 2 3
예제 출력 3 
3 6
예제 입력 4 
9
1 2 3 1 2 3 1 2 10
예제 출력 4 
-1
*/

#include <bits/stdc++.h>

using namespace std;

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int n;
    cin >> n;
    vector<int> v(n);
    long long sum = 0;
    for (int i = 0; i < n; i++) {
        cin >> v[i];
        sum += v[i];
    }

    if (sum % 3 != 0) {
        cout << -1;
        return 0;
    }

    sum /= 3;
    vector<int> psum(n);
    psum[0] = v[0];
    for (int i = 1; i < n; i++) {
        psum[i] = psum[i - 1] + v[i];
    }

    int i = 0;
    while (i < n && psum[i] != sum) {
        i++;
    }

    if (i == n) {
        cout << -1;
        return 0;
    }

    int j = i + 1;
    
    while (j < n && psum[j] != 2 * sum) {
        j++;
    }

    if (j == n) {
        cout << -1;
        return 0;
    }

    cout << i + 1 << ' ' << j + 1; 

	return 0;
}
