/*
어려운 선택 다국어
 
시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
1 초	1024 MB	2947	2497	2384	85.082%
문제
장거리 비행 시 항공사는 따뜻한 기내식을 제공합니다. 보통 승무원은 기내식이 담긴 카트를 비행기 통로를 따라 밀고 내려갑니다. 카트가 좌석에 도착하면 바로 질문을 받습니다: "치킨, 소고기, 파스타 중 무엇을 드실까요?" 선택할 수 있는 시간은 몇 초밖에 없고 옆 사람이 아직 포장을 뜯지 않았기 때문에 선택이 어떻게 될지 알 수 없습니다. . .

이 항공편의 승무원은 절차를 변경하기로 결정했습니다. 먼저 모든 승객에게 어떤 기내식을 선호하는지 물어본 다음, 각 선택에 대해 이 항공편에서 제공되는 기내식 수가 충분한지 확인합니다.

예를 들어 치킨, 소고기, 파스타의 이용 가능한 기내식 수는 각각 80, 20, 40이고 승객이 치킨, 소고기, 파스타를 선택한 수는 각각 45, 23, 48이라고 가정해 보겠습니다. 이 경우 소고기를 원했던 승객 3명과 파스타를 원했던 승객 8명이 만족할 수 없으므로 11명은 자신이 선택한 식사를 제공받지 못하게 됩니다.

각 선택에 대해 제공되는 식사의 양과 각 선택에 대해 요청된 식사의 수가 주어졌을 때, 승무원이 자신의 선택을 받지 못할 승객의 수를 결정하도록 도와주시겠습니까?

입력
첫 번째 줄에는 각각 치킨, 소고기, 파스타의 기내식 수를 나타내는 세 개의 정수 Ca, Ba, Pa(0 ≤ Ca, Ba, Pa ≤ 100)가 들어 있습니다. 두 번째 줄에는 각각 치킨, 소고기, 파스타에 대해 요청된 식사 수를 나타내는 세 개의 정수 Cr, Br, Pr(0 ≤ Cr, Br, Pr ≤ 100)이 포함됩니다.

출력
식사에 대한 선택을 받지 못할 승객의 수를 나타내는 정수를 한 줄로 출력합니다.

예제 입력 1 
80 20 40
45 23 48
예제 출력 1 
11
예제 입력 2 
0 0 0
100 100 100
예제 출력 2 
300
예제 입력 3 
41 42 43
41 42 43
예제 출력 3 
0
*/

#include <bits/stdc++.h>

using namespace std;

int main() {
    vector<int> A, B;
    
    for (int i = 0; i < 3; i++) {
      int input;
      cin >> input;
      A.push_back(input);
    }
    for (int i = 0; i < 3; i++) {
      int input;
      cin >> input;
      B.push_back(input);
    }
    
    int ans = 0;
    
    for (int i = 0; i < 3; i++) {
      ans += A[i] < B[i] ? B[i] - A[i] : 0;
    }
    
    cout << ans << endl;
    return 0;
}