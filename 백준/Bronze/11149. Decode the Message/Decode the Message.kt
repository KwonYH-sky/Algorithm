/*
메시지 해독

시간 제한 메모리 제한
1 초 256 MB
문제
친구 알렉스와 아담은 서로에게 메시지를 보낼 수 있는 비밀 시스템을 개발했습니다.
유일한 문제는 이 시스템이 손으로 하기에는 너무 어렵다는 것입니다.
그래서 알렉스는 비밀 메시지를 해독하는 프로그램을 작성하기 위해 여러분의 도움을 요청했습니다.
시스템을 절대 공개하지 않겠다고 맹세한 후,
그는 암호화된 메시지가 하나 이상의 단어로 구성되며,
공백으로 구분된 소문자 A-Z로만 이루어진다고 설명합니다.
각 단어는 하나의 문자, a-z 또는 공백에 해당하며,
단어의 각 문자의 값을 더하고 27로 나눈 후 나머지를 취하여 구합니다.
a는 0, b는 1, 25가 할당된 z까지 값을 할당받습니다.
계산된 나머지를 기준으로 0-25 값은 이전과 같이 a-z에 해당하고 26 값은 공백에 해당합니다.

친구가 암호화된 메시지를 받아 디코딩된 메시지를 출력하는 프로그램을 작성하도록 도와주세요.

입력
입력의 첫 번째 줄은 테스트 케이스의 수인 단일 정수 T로 구성됩니다.
각 테스트 케이스는 비밀 메시지가 포함된 한 줄로 구성됩니다.
비밀 메시지에는 소문자와 공백만 포함되며,
단어 사이에는 공백만 있고 두 개 이상의 연속된 공백은 없습니다.

0 < T ≤ 100
각 비밀 메시지는 1000자를 넘지 않아야 합니다.
출력
각 테스트 케이스에 대해 해당 디코딩된 메시지를 출력합니다.

예제 입력 1
2
a b c d e f
it is late o green wrong whole
예제 출력 1
abcdef
a horse
*/

fun main() {
    val T = readln().toInt()

    for (i in 1..T) {
        val message = readln()
        val words = message.split(" ")
        val sb = StringBuilder()

        for (word in words) {
            var sum = 0
            for (c in word) {
                val value = c - 'a'
                sum += value
            }
            val result = sum % 27
            sb.append(if (result == 26) ' ' else 'a' + result)
        }
        println(sb)
    }
}