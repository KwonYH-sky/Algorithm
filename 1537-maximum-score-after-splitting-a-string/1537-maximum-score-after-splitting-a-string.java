/*
1422. 문자열 분할 후 최대 점수

0과 1로 이루어진 문자열 s가 주어졌을 때, 
이 문자열을 비어 있지 않은 두 개의 부분 문자열(즉, 왼쪽 부분 문자열과 오른쪽 부분 문자열)로 
나눈 후의 최대 점수를 반환합니다.

문자열을 분할한 후의 점수는 왼쪽 부분 문자열에 있는 0의 개수와 
오른쪽 부분 문자열에 있는 1의 개수를 더한 값입니다.

예제 1:
입력: s = "011101"
Output: 5 
설명: 
s를 비어 있지 않은 두 개의 문자열로 분할하는 가능한 모든 방법은 다음과 같습니다:
왼쪽 = "0", 오른쪽 = "11101", 점수 = 1 + 4 = 5 
왼쪽 = "01", 오른쪽 = "1101", 점수 = 1 + 3 = 4 
왼쪽 = "011", 오른쪽 = "101", 점수 = 1 + 2 = 3 
왼쪽 = "0111", 오른쪽 = "01", 점수 = 1 + 1 = 2 
왼쪽 = "01110", 오른쪽 = "1", 점수 = 2 + 1 = 3

예제 2:
입력: s = "00111"
출력 5
설명: 왼쪽 = "00", 오른쪽 = "111"일 때 최대 점수 = 2 + 3 = 5를 얻습니다.

예제 3:
입력: s = "1111"
Output: 3
 

제약 조건:

2 <= s.length <= 500
문자열 s는 문자 '0'과 '1'로만 구성됩니다.
*/

class Solution {
    public int maxScore(String s) {
        int zero = 0, one = 0;
        int max = Integer.MIN_VALUE;
        
        for(int i=0;i<s.length();i++) {
            if(s.charAt(i) == '0') zero++; 
            else one++;

            if(i != s.length()-1) 
                max = Math.max(zero - one, max);
        }

        return max + one;
    }
}