/*
2125. 은행의 레이저 빔 수

은행 내부에는 도난 방지 보안 장치가 활성화되어 있습니다. 
은행의 평면도를 나타내는 0 인덱스의 이진 문자열 배열 은행이 주어지며, 
은행은 m x n 2D 행렬입니다. bank[i]는 '0'과 '1'로 구성된 째 행을 나타냅니다. 
'0'은 셀이 비어 있음을 의미하고, '1'은 셀에 보안 장치가 있음을 의미합니다.

두 조건이 모두 충족되면 두 보안 장치 사이에는 하나의 레이저 빔이 있습니다:
    - 두 장치가 서로 다른 두 행, 즉 r1과 r2에 위치하며 r1이 <r2인 경우.
    - r1 < i < r2인 각 행 i에 대해, 째 행에는 보안 장치가 없습니다.

레이저 빔은 독립적입니다. 
즉, 한 빔이 다른 빔을 간섭하거나 결합하지 않습니다.
은행에 있는 레이저 빔의 총 개수를 반환합니다.
 
예제 1:
입력: bank = ["011001","000000","010100","001000"]
Output: 8
설명: 다음 각 장치 쌍 사이에는 하나의 빔이 있습니다. 총 8개의 빔이 있습니다:
 * bank[0][1] -- bank[2][1]
 * bank[0][1] -- bank[2][3]
 * bank[0][2] -- bank[2][1]
 * bank[0][2] -- bank[2][3]
 * bank[0][5] -- bank[2][1]
 * bank[0][5] -- bank[2][3]
 * bank[2][1] -- bank[3][2]
 * bank[2][3] -- bank[3][2]
0번째 줄에 있는 장치와 3번째 줄에 있는 장치 사이에는 빔이 없다는 점에 유의하세요.
이는 2번째 행에 보안 장치가 포함되어 있어 두 번째 조건을 위반하기 때문입니다.

예제 2:
입력: bank = ["000","111","000"]
Output: 0
설명: 서로 다른 두 행에 위치한 두 장치가 존재하지 않습니다.
 
제약 조건:
    m == bank.length
    n == bank[i].length
    1 <= m, n <= 500
    bank[i][j] is either '0' or '1'.
*/

class Solution {
    public int numberOfBeams(String[] bank) {
        int res = 0;
        int prev = 0;
        int count;

        for (String b : bank) {
            count = 0;
            for (char c: b.toCharArray())
                if (c == '1') count++;
            if (count > 0) {
                res += prev * count;
                prev = count;
            }
        }
        
        return res;
    }
}